spring:
  application:
    name: demo
    base-url: ${SPRING_APPLICATION_BASE_URL:http://localhost:8080}
  datasource:
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:123}
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/nerdery_java}
    hikari:
      maximum-pool-size: 20
  jpa:
    hibernate:
      ddl-auto: update
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:localhost}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      timeout: 3600000
  cache:
    redis:
      time-to-live: 7200000
    type: redis
  flyway:
    enabled: true
    locations: classpath:db/migration
    schemas: public
    baseline-on-migrate: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 50MB
      max-request-size: 50MB
      file-size-threshold: 2KB
  graphql:
    graphiql:
      enabled: true

security:
  jwt:
    secret-key: ${JWT_SECRET_KEY}
    access-token-expiration-time: 3600000 # 1h in millisecond
    refresh-token-expiration-time: 604800000 # 1h in millisecond

api:
  password:
    reset:
      ttl: 600 # 10 minutes

app:
  sendgrid:
    api-key: ${SPRING_SENDGRID_API_KEY}
    from-email: ${SPRING_SENDGRID_FROM_EMAIL}
    from-name: ${SPRING_SENDGRID_FROM_NAME}
    template:
      reset-password-email: ${SPRING_SENDGRID_TEMPLATE_RESET_PASSWORD_EMAIL}
aws:
  s3:
    bucket-name: ${SPRING_AWS_S3_BUCKET_NAME}
    region: ${SPRING_AWS_S3_REGION:us-east-2}
    access-key-id: ${SPRING_AWS_S3_ACCESS_KEY_ID}
    secret-access-key: ${SPRING_AWS_S3_SECRET_ACCESS_KEY}

stripe:
  api:
    publishable-key: ${STRIPE_API_PUBLISHABLE_KEY}
    secret-key: ${STRIPE_API_SECRET_KEY}
    webhook-secret: ${STRIPE_API_WEBHOOK_SECRET}